################################################################################
# Copyright (c) 2021 Robert Bosch Manufacturing Solutions GmbH and others
# Copyright (c) 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
################################################################################

# aas-registry-openapi.yaml
# https://app.swaggerhub.com/apis/Plattform_i40/AssetAdministrationShellRegistryServiceSpecification/V3.0_SSP-001
openapi: 3.0.3
info:
  title: DotAAS Part 2 | HTTP/REST | Asset Administration Shell Registry Service Specification
  description: "The Full Profile of the Asset Administration Shell Registry Service Specification as part of the Specification of the Asset Administration Shell: Part 2. Publisher: Industrial Digital Twin Association (IDTA) April 2023"
  contact:
    name: Industrial Digital Twin Association (IDTA)
    email: info@idtwin.org
  license:
    name: CC BY 4.0
    url: https://creativecommons.org/licenses/by/4.0/
  version: V3.0_SSP-001
security:
  - bearerAuth: []
servers:
  - url: "{protocol}://{host_name}:{port}{context_root}/api/{version_prefix}/"
    variables:
      protocol:
        description: Allows access through http and https (recommended)
        default: https
        enum:
          - http
          - https
      host_name:
        description: Hostname of server hosting the api
        default: admin-shell.io
      port:
        description: "80 is default for http, 443 for https"
        default: "443"
        enum:
          - "80"
          - "443"
          - "4243"
      version_prefix:
        default: v3.0
        enum:
          - v3.0
      context_root:
        description: Context root for the API
        default: ""
paths:
  /shell-descriptors:
    get:
      tags:
        - Asset Administration Shell Registry API
      summary: Returns all Asset Administration Shell Descriptors
      operationId: GetAllAssetAdministrationShellDescriptors
      parameters:
        - name: limit
          in: query
          description: The maximum number of elements in the response array
          required: false
          schema:
            minimum: 1
            type: integer
        - name: cursor
          in: query
          description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
          required: false
          schema:
            type: string
        - name: assetKind
          in: query
          description: The Asset's kind (Instance or Type)
          required: false
          schema:
            $ref: '#/components/schemas/AssetKind'
        - name: assetType
          in: query
          description: The Asset's type (UTF8-BASE64-URL-encoded)
          required: false
          schema:
            maxLength: 2000
            minLength: 1
            pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\x{00010000}-\\x{0010FFFF}]*$"
            type: string
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      responses:
        "200":
          description: Requested Asset Administration Shell Descriptors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetAdministrationShellDescriptorsResult'
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/3/0
        - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptorsByAssetKind/3/0
        - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptorsByAssetType/3/0
    post:
      tags:
        - Asset Administration Shell Registry API
      summary: "Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS"
      operationId: PostAssetAdministrationShellDescriptor
      requestBody:
        description: Asset Administration Shell Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        required: false
      responses:
        "201":
          description: Asset Administration Shell Descriptor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "409":
          description: "Conflict, a resource which shall be created exists already. Might be thrown if a Submodel or SubmodelElement with the same ShortId is contained in a POST request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/3/0
  /shell-descriptors/{aasIdentifier}:
    get:
      tags:
        - Asset Administration Shell Registry API
      summary: Returns a specific Asset Administration Shell Descriptor
      operationId: GetAssetAdministrationShellDescriptorById
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      responses:
        "200":
          description: Requested Asset Administration Shell Descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/3/0
    put:
      tags:
        - Asset Administration Shell Registry API
      summary: Updates an existing Asset Administration Shell Descriptor
      operationId: PutAssetAdministrationShellDescriptorById
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      requestBody:
        description: Asset Administration Shell Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        required: true
      responses:
        "204":
          description: Asset Administration Shell Descriptor updated successfully
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/3/0
    delete:
      tags:
        - Asset Administration Shell Registry API
      summary: "Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS"
      operationId: DeleteAssetAdministrationShellDescriptorById
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        "204":
          description: Asset Administration Shell Descriptor deleted successfully
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/3/0
  /shell-descriptors/{aasIdentifier}/submodel-descriptors:
    get:
      tags:
        - Asset Administration Shell Registry API
      summary: Returns all Submodel Descriptors
      operationId: GetAllSubmodelDescriptorsThroughSuperpath
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - name: limit
          in: query
          description: The maximum number of elements in the response array
          schema:
            minimum: 1
            type: integer
        - name: cursor
          in: query
          description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
          schema:
            type: string
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      responses:
        "200":
          description: Requested Submodel Descriptors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelDescriptorsResult'
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/3/0
    post:
      tags:
        - Asset Administration Shell Registry API
      summary: "Creates a new Submodel Descriptor, i.e. registers a submodel"
      operationId: PostSubmodelDescriptor-ThroughSuperpath
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      requestBody:
        description: Submodel Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
      responses:
        "201":
          description: Submodel Descriptor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "409":
          description: "Conflict, a resource which shall be created exists already. Might be thrown if a Submodel or SubmodelElement with the same ShortId is contained in a POST request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostSubmodelDescriptor/3/0
  /shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}:
    get:
      tags:
        - Asset Administration Shell Registry API
      summary: Returns a specific Submodel Descriptor
      operationId: GetSubmodelDescriptorByIdThroughSuperpath
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      responses:
        "200":
          description: Requested Submodel Descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetSubmodelDescriptorById/3/0
    put:
      tags:
        - Asset Administration Shell Registry API
      summary: Updates an existing Submodel Descriptor
      operationId: PutSubmodelDescriptorByIdThroughSuperpath
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      requestBody:
        description: Submodel Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
      responses:
        "204":
          description: Submodel Descriptor updated successfully
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutSubmodelDescriptorById/3/0
    delete:
      tags:
        - Asset Administration Shell Registry API
      summary: "Deletes a Submodel Descriptor, i.e. de-registers a submodel"
      operationId: DeleteSubmodelDescriptorByIdThroughSuperpath
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      responses:
        "204":
          description: Submodel Descriptor deleted successfully
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/3/0
  /description:
    get:
      tags:
        - Description API
      summary: Returns the self-describing information of a network resource (ServiceDescription)
      operationId: GetDescription
      responses:
        "200":
          description: Requested Description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
        - https://admin-shell.io/aas/API/Descriptor/GetDescription/3/0
  /lookup/shells:
    get:
      tags:
        - Registry and Discovery Interface
      summary: Returns a list of Asset Administration Shell ids based on Asset identifier key-value-pairs. Only the Shell ids are returned when all provided key-value pairs match.
      operationId: getAllAssetAdministrationShellIdsByAssetLink
      parameters:
        - name: assetIds
          in: query
          description: The key-value-pair of an Asset identifier
          required: false
          style: form
          explode: true
          # The form style defined in the AAS API does not match with the provided example.
          # the "content" is the correct way to accept json encoded query parameters
          # style: form
          # explode: true
          schema:
            type: array
            maxItems: 10000
            items:
              type: string
              format: byte
            example: '?assetIds=eyAibmFtZSI6ICJzb21lLWFzc2V0LWlkIiwgInZhbHVlIjogImh0dHA6Ly9leGFtcGxlLWNvbXBhbnkuY29tL215QXNzZXQiLCAiZXh0ZXJuYWxTdWJqZWN0SWQiOiB7ICJrZXlzIjogWyB7ICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIsICJ2YWx1ZSI6ICJodHRwOi8vZXhhbXBsZS1jb21wYW55LmNvbS9leGFtcGxlLWNvbXBhbnlzLWFzc2V0LWtleXMiIH0gXSwgInR5cGUiOiAiR2xvYmFsUmVmZXJlbmNlIiB9IH0&assetIds=eyAibmFtZSI6ICJzb21lLW90aGVyLWFzc2V0LWlkIiwgInZhbHVlIjogIjEyMzQ1QUJDIiwgImV4dGVybmFsU3ViamVjdElkIjogeyAia2V5cyI6IFsgeyAidHlwZSI6ICJHbG9iYWxSZWZlcmVuY2UiLCAidmFsdWUiOiAiaHR0cDovL215LW93bi1jb21wYW55LmNvbS9rZXlzIiB9IF0sICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIgfSB9'
        - name: limit
          in: query
          description: The maximum number of elements in the response array
          required: false
          schema:
            type: integer
            minimum: 1
        - name: cursor
          in: query
          description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      responses:
        "200":
          description: Requested Asset Administration Shell ids
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResult'
                  - type: object
                    properties:
                      result:
                        type: array
                        maxItems: 10000
                        items:
                          type: string
              examples:
                complete:
                  $ref: '#/components/examples/lookup-shells-by-aas-identifier-response'
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellIdsByAssetLink/1/0/RC02
  /lookup/shells/{aasIdentifier}:
    get:
      tags:
        - Registry and Discovery Interface
      summary: Returns a list of Asset identifier key-value-pairs based on an Asset Administration Shell id to edit discoverable content
      operationId: GetAllAssetLinksById
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      responses:
        "200":
          description: Requested Asset identifier key-value-pairs
          content:
            application/json:
              schema:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/SpecificAssetId'
              examples:
                complete:
                  $ref: '#/components/examples/lookup-specific-asset-ids'
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC02
    post:
      tags:
        - Registry and Discovery Interface
      summary: Creates all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content
      operationId: PostAllAssetLinksById
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      requestBody:
        description: Asset identifier key-value-pairs
        content:
          application/json:
            schema:
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/SpecificAssetId'
            examples:
              complete:
                $ref: '#/components/examples/lookup-specific-asset-ids'
        required: true
      responses:
        "201":
          description: Asset identifier key-value-pairs created successfully
          content:
            application/json:
              schema:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/SpecificAssetId'
              examples:
                complete:
                  $ref: '#/components/examples/lookup-specific-asset-ids'
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC02
    delete:
      tags:
        - Registry and Discovery Interface
      summary: Deletes all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content
      operationId: DeleteAllAssetLinksById
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        "204":
          description: Asset identifier key-value-pairs deleted successfully
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC02
  /submodel-descriptor/authorized:
    post:
      tags:
        - _PRIVATE_ Submodel Access Control Registry API
      summary: "Private endpoint that verifies whether the caller has access to the specified submodel endpoint or not."
      operationId: PostSubmodelDescriptorAuthorized
      parameters:
        - $ref: '#/components/parameters/ExternalSubjectIdHeader'
      requestBody:
        description: The URL of the target request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelEndpointAuthorization'
        required: true
      responses:
        "200":
          description: The caller has access to the specified endpoint
        "400":
          description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ModelReference:
      type: object
      required:
        - keys
      properties:
        # not supported for Catena-X
        #  referredSemanticId:
        #   $ref: '#/components/schemas/Reference'
        keys:
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/Key'
      # The code generator gets in issues, because it's somehow recursive. Reference has a reference ModelReference ..
      #    allOf:
      #    - $ref: '#/components/schemas/Reference'
    KeyElements:
      type: string
      enum:
        - AssetAdministrationShell
        - AccessPermissionRule
        - ConceptDescription
        - Submodel
        - AnnotatedRelationshipElement
        - BasicEvent
        - Blob
        - Capability
        - DataElement
        - File
        - Entity
        - Event
        - MultiLanguageProperty
        - Operation
        - Property
        - Range
        - ReferenceElement
        - RelationshipElement
        - SubmodelElement
        - SubmodelElementList
        - SubmodelElementStruct
        - View
        - FragmentReference
    AssetKind:
      type: string
      enum:
        - Instance
        - NotApplicable
        - Type
    GetAssetAdministrationShellDescriptorsResult:
      type: object
      allOf:
        - $ref: '#/components/schemas/PagedResult'
        - type: object
          properties:
            result:
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
    PagedResult:
      type: object
      properties:
        paging_metadata:
          $ref: '#/components/schemas/PagedResult_paging_metadata'
    AssetAdministrationShellDescriptor:
      required:
        - id
      type: object
      example: {"description":[{"language":"de","text":"hello text"},{"language":"en","text":"hello s"}],"displayName":[{"language":"de","text":"this is an example description1"}],"endpoints":[{"interface":"interfaceNameExample","protocolInformation":{"href":"endpointAddressExample","endpointProtocol":"endpointProtocolExample","endpointProtocolVersion":["e"],"subprotocol":"subprotocolExample","subprotocolBody":"subprotocolBodyExample","subprotocolBodyEncoding":"subprotocolBodyExample","securityAttributes":[{"type":"NONE","key": "Security Attribute key","value": "Security Attribute value"}]}}],"idShort":"idShortExample","id":"e1eba3d7-91f0-4dac-a730-eaa1d35e035c","specificAssetIds":[{"supplementalSemanticIds":[{"type":"ExternalReference","keys":[{"type":"Submodel","value":"semanticIdExample"}]}],"name":"identifier1KeyExample","value":"identifier1ValueExample"},{"supplementalSemanticIds":[{"type":"ExternalReference","keys":[{"type":"Submodel","value":"semanticIdExample"}]}],"name":"identifier2KeyExample","value":"identifier2ValueExample"}],"submodelDescriptors":[{"endpoints":[{"interface":"interfaceNameExample","protocolInformation":{"href":"endpointAddressExample","endpointProtocol":"endpointProtocolExample","endpointProtocolVersion":["e"],"subprotocol":"subprotocolExample","subprotocolBody":"subprotocolBodyExample","subprotocolBodyEncoding":"subprotocolBodyExample","securityAttributes":[{"type":"NONE","key": "Security Attribute key","value": "Security Attribute value"}]}}],"idShort":"idShortExample","id":"cd47615b-daf3-4036-8670-d2f89349d388","semanticId":{"type":"ExternalReference","keys":[{"type":"Submodel","value":"semanticIdExample"}]},"description":[{"language":"de","text":"hello text"},{"language":"en","text":"hello s"}]}]}
      allOf:
        - $ref: '#/components/schemas/Descriptor'
        - properties:
            administration:
              $ref: '#/components/schemas/AdministrativeInformation'
            assetKind:
              $ref: '#/components/schemas/AssetKind'
            assetType:
              maxLength: 2000
              minLength: 1
              pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\x{00010000}-\\x{0010FFFF}]*$"
              type: string
            endpoints:
              minItems: 1
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/Endpoint'
            globalAssetId:
              maxLength: 2000
              minLength: 1
              pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\x{00010000}-\\x{0010FFFF}]*$"
              type: string
            idShort:
              maxLength: 128
              type: string
            id:
              maxLength: 2000
              minLength: 1
              pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\x{00010000}-\\x{0010FFFF}]*$"
              type: string
            specificAssetIds:
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/SpecificAssetId'
            submodelDescriptors:
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/SubmodelDescriptor'
    Descriptor:
      type: object
      properties:
        description:
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/LangStringTextType'
        displayName:
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/LangStringNameType'
      example: { "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }
    LangStringTextType:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractLangString'
        - properties:
            text:
              type: string
              maxLength: 1023
    AbstractLangString:
      type: object
      properties:
        language:
          pattern: "^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"
          type: string
        text:
          minLength: 0
          pattern: "^([\\t\\n\\r \\_\\.\\/\\:\\#\\-a-zA-Z0-9]|[\\ud800\\udc00-\\ud800\\udfff]|[\\ud801\\udc00-\\udbfe\\udfff]|[\\udbff\\udc00-\\udbff\\udfff])*+$"
          type: string
    LangStringNameType:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractLangString'
        - properties:
            text:
              type: string
              maxLength: 128
    Extension:
      type: object
      allOf:
        - $ref: '#/components/schemas/HasSemantics'
        - properties:
            name:
              maxLength: 128
              minLength: 1
              #      pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
              type: string
            valueType:
              $ref: '#/components/schemas/DataTypeDefXsd'
            value:
              type: string
            refersTo:
              minItems: 1
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/Reference'
    HasSemantics:
      type: object
      properties:
        semanticId:
          $ref: '#/components/schemas/Reference'
        supplementalSemanticIds:
          minItems: 1
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/Reference'
    Reference:
      type: object
      allOf:
        - $ref: '#/components/schemas/ReferenceParent'
    ReferenceParent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          minItems: 1
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/Key'
    ReferenceTypes:
      type: string
      enum:
        - ExternalReference
        - ModelReference
    Key:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/KeyTypes'
        value:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r \\_\\.\\/\\:\\#\\-a-zA-Z0-9]|[\\ud800\\udc00-\\ud800\\udfff]|[\\ud801\\udc00-\\udbfe\\udfff]|[\\udbff\\udc00-\\udbff\\udfff])*+$"
          type: string
    KeyTypes:
      type: string
      enum:
        - AnnotatedRelationshipElement
        - AssetAdministrationShell
        - BasicEventElement
        - Blob
        - Capability
        - ConceptDescription
        - DataElement
        - Entity
        - EventElement
        - File
        - FragmentReference
        - GlobalReference
        - Identifiable
        - MultiLanguageProperty
        - Operation
        - Property
        - Range
        - Referable
        - ReferenceElement
        - RelationshipElement
        - Submodel
        - SubmodelElement
        - SubmodelElementCollection
        - SubmodelElementList
    DataTypeDefXsd:
      type: string
      enum:
        - xs:anyURI
        - xs:base64Binary
        - xs:boolean
        - xs:byte
        - xs:date
        - xs:dateTime
        - xs:decimal
        - xs:double
        - xs:duration
        - xs:float
        - xs:gDay
        - xs:gMonth
        - xs:gMonthDay
        - xs:gYear
        - xs:gYearMonth
        - xs:hexBinary
        - xs:int
        - xs:integer
        - xs:long
        - xs:negativeInteger
        - xs:nonNegativeInteger
        - xs:nonPositiveInteger
        - xs:positiveInteger
        - xs:short
        - xs:string
        - xs:time
        - xs:unsignedByte
        - xs:unsignedInt
        - xs:unsignedLong
        - xs:unsignedShort
    AdministrativeInformation:
      type: object
      allOf:
        - $ref: '#/components/schemas/HasDataSpecification'
        - properties:
            version:
              type: string
              allOf:
                - maxLength: 4
                  minLength: 1
            #     - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            #    - pattern: "^(0|[1-9][0-9]*)$"
            revision:
              type: string
              allOf:
                - maxLength: 4
                  minLength: 1
            #      - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            #     - pattern: "^(0|[1-9][0-9]*)$"
            creator:
              $ref: '#/components/schemas/Reference'
            templateId:
              maxLength: 2000
              minLength: 1
              #     pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
              type: string
    HasDataSpecification:
      type: object
      properties:
        embeddedDataSpecifications:
          minItems: 1
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/EmbeddedDataSpecification'
    EmbeddedDataSpecification:
      type: object
      properties:
        dataSpecification:
          $ref: '#/components/schemas/Reference'
        dataSpecificationContent:
          $ref: '#/components/schemas/DataSpecificationContent_choice'
    DataSpecificationContent_choice:
      type: object
      oneOf:
        - $ref: '#/components/schemas/DataSpecificationIec61360'
    DataSpecificationIec61360:
      type: object
      allOf:
        - $ref: '#/components/schemas/DataSpecificationContent'
        - properties:
            preferredName:
              minItems: 1
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/LangStringPreferredNameTypeIec61360'
            shortName:
              minItems: 1
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/LangStringShortNameTypeIec61360'
            unit:
              minLength: 1
              #       pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
              type: string
            unitId:
              $ref: '#/components/schemas/Reference'
            sourceOfDefinition:
              minLength: 1
              #     pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
              type: string
            symbol:
              minLength: 1
              #     pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
              type: string
            dataType:
              $ref: '#/components/schemas/DataTypeIec61360'
            definition:
              minItems: 1
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/LangStringDefinitionTypeIec61360'
            valueFormat:
              minLength: 1
              #   pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
              type: string
            valueList:
              $ref: '#/components/schemas/ValueList'
            value:
              maxLength: 2000
              minLength: 1
              #   pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
              type: string
            levelType:
              $ref: '#/components/schemas/LevelType'
            modelType:
              #     pattern: DataSpecificationIec61360
              type: string
    DataSpecificationContent:
      type: object
      properties:
        modelType:
          $ref: '#/components/schemas/ModelType'
    ModelType:
      type: string
      enum:
        - AnnotatedRelationshipElement
        - AssetAdministrationShell
        - BasicEventElement
        - Blob
        - Capability
        - ConceptDescription
        - DataSpecificationIec61360
        - Entity
        - File
        - MultiLanguageProperty
        - Operation
        - Property
        - Range
        - ReferenceElement
        - RelationshipElement
        - Submodel
        - SubmodelElementCollection
        - SubmodelElementList
    LangStringPreferredNameTypeIec61360:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractLangString'
        - properties:
            text:
              maxLength: 255
    LangStringShortNameTypeIec61360:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractLangString'
        - properties:
            text:
              maxLength: 18
    DataTypeIec61360:
      type: string
      enum:
        - BLOB
        - BOOLEAN
        - DATE
        - FILE
        - HTML
        - INTEGER_COUNT
        - INTEGER_CURRENCY
        - INTEGER_MEASURE
        - IRDI
        - IRI
        - RATIONAL
        - RATIONAL_MEASURE
        - REAL_COUNT
        - REAL_CURRENCY
        - REAL_MEASURE
        - STRING
        - STRING_TRANSLATABLE
        - TIME
        - TIMESTAMP
    LangStringDefinitionTypeIec61360:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractLangString'
        - properties:
            text:
              maxLength: 1023
    ValueList:
      type: object
      properties:
        valueReferencePairs:
          minItems: 1
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/ValueReferencePair'
    ValueReferencePair:
      type: object
      properties:
        value:
          maxLength: 2000
          minLength: 1
          #    pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        valueId:
          $ref: '#/components/schemas/Reference'
    LevelType:
      type: object
      properties:
        min:
          type: boolean
        nom:
          type: boolean
        typ:
          type: boolean
        max:
          type: boolean
    Endpoint:
      type: object
      required:
        - interface
        - protocolInformation
      properties:
        interface:
          maxLength: 128
          type: string
        protocolInformation:
          $ref: '#/components/schemas/ProtocolInformation'
    ProtocolInformation:
      type: object
      properties:
        href:
          maxLength: 2048
          type: string
        endpointProtocol:
          maxLength: 128
          type: string
        endpointProtocolVersion:
          type: array
          maxItems: 10000
          items:
            maxLength: 128
            type: string
        subprotocol:
          maxLength: 128
          type: string
        subprotocolBody:
          maxLength: 2048
          type: string
        subprotocolBodyEncoding:
          maxLength: 128
          type: string
        securityAttributes:
          minItems: 1
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/ProtocolInformation_securityAttributes'
    SpecificAssetId:
      type: object
      allOf:
        - $ref: '#/components/schemas/HasSemantics'
        - properties:
            name:
              maxLength: 64
              minLength: 1
              pattern: "^([\\t\\n\\r \\_\\.\\/\\:\\#\\-a-zA-Z0-9]|[\\ud800\\udc00-\\ud800\\udfff]|[\\ud801\\udc00-\\udbfe\\udfff]|[\\udbff\\udc00-\\udbff\\udfff])*+$"
              type: string
            value:
              maxLength: 2000
              minLength: 1
              pattern: "^([\\t\\n\\r \\_\\.\\/\\:\\#\\-a-zA-Z0-9]|[\\ud800\\udc00-\\ud800\\udfff]|[\\ud801\\udc00-\\udbfe\\udfff]|[\\udbff\\udc00-\\udbff\\udfff])*+$"
              type: string
            externalSubjectId:
              $ref: '#/components/schemas/Reference'
          required:
            - name
            - value
    SubmodelDescriptor:
      type: object
      properties:
        administration:
          $ref: '#/components/schemas/AdministrativeInformation'
        endpoints:
          minItems: 1
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/Endpoint'
        idShort:
          maxLength: 128
          type: string
        id:
          maxLength: 2000
          minLength: 1
          pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\x{00010000}-\\x{0010FFFF}]*$"
          type: string
        semanticId:
          $ref: '#/components/schemas/Reference'
        supplementalSemanticId:
          minItems: 1
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/Reference'
      example: {"endpoints": [{"interface": "interfaceNameExample","protocolInformation": {"href": "endpointAddressExample","endpointProtocol": "endpointProtocolExample","endpointProtocolVersion": [ "e"],"subprotocol": "subprotocolExample","subprotocolBody": "subprotocolBodyExample","subprotocolBodyEncoding": "subprotocolBodyExample","securityAttributes": [{"type": "NONE","key": "Security Attribute key","value": "Security Attribute value" }]}}],"idShort": "idShortExample","id": "341f63de-728a-4b6d-9c72-c0d9ba4f8c7d","semanticId": {"type": "ExternalReference","keys": [{"type": "Submodel","value": "semanticIdExample"}]},"description": [{"language": "de","text": "hello text"},{"language": "en","text": "hello s"}]}
      allOf:
        - $ref: '#/components/schemas/Descriptor'
    Result:
      type: object
      properties:
        messages:
          type: array
          maxItems: 10000
          items:
            $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        code:
          maxLength: 32
          minLength: 1
          type: string
        correlationId:
          maxLength: 128
          minLength: 1
          type: string
        messageType:
          type: string
          enum:
            - Undefined
            - Info
            - Warning
            - Error
            - Exception
        text:
          type: string
        timestamp:
          pattern: "^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\\.[0-9]+)?)|24:00:00(\\.0+)?)(Z|\\+00:00|-00:00)$"
          type: string
    GetSubmodelDescriptorsResult:
      type: object
      allOf:
        - $ref: '#/components/schemas/PagedResult'
        - type: object
          properties:
            result:
              type: array
              maxItems: 10000
              items:
                $ref: '#/components/schemas/SubmodelDescriptor'
    ServiceDescription:
      type: object
      properties:
        profiles:
          minItems: 1
          type: array
          maxItems: 10000
          items:
            type: string
            enum:
              - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-001
              - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-002
              - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-001
              - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-002
              - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-003
              - https://admin-shell.io/aas/API/3/0/AasxFileServerServiceSpecification/SSP-001
              - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-001
              - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002
              - https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-001
              - https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-002
              - https://admin-shell.io/aas/API/3/0/DiscoveryServiceSpecification/SSP-001
              - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-001
              - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-002
              - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-001
              - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-002
              - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-003
              - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-004
              - https://admin-shell.io/aas/API/3/0/ConceptDescriptionServiceSpecification/SSP-001
      description: "The Description object enables servers to present their capabilities to the clients, in particular which profiles they implement. At least one defined profile is required. Additional, proprietary attributes might be included. Nevertheless, the server must not expect that a regular client understands them."
      example: { "profiles": ["https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002", "https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-002"] }
    PagedResult_paging_metadata:
      type: object
      properties:
        cursor:
          type: string
          example: wJlCDLIl6KTWypN7T6vc6nWEmEYe99Hjf1XY1xmqV-M=#
    ProtocolInformation_securityAttributes:
      type: object
      properties:
        type:
          type: string
          enum:
            - NONE
            - RFC_TLSA
            - W3C_DID
        key:
          type: string
        value:
          type: string
    SubmodelEndpointAuthorization:
      type: object
      properties:
        submodelEndpointUrl:
          type: string
          description: The full submodel endpoint URL requested by the end user (starting with the EDC Data Plane base URL and including the request path)
          pattern: "^(http|https)://.+$"
          minimum: 10
          maximum: 2048
          example: https://edc-dataplane/public/submodel/api/v2/path?param=true
      required:
        - submodelEndpointUrl
      additionalProperties: false
  responses:
    bad-request:
      description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    internal-server-error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    default:
      description: Default error handling for unmentioned status codes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    conflict:
      description: "Conflict, a resource which shall be created exists already. Might be thrown if a Submodel or SubmodelElement with the same ShortId is contained in a POST request."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    not-found:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
  parameters:
    Limit:
      name: limit
      in: query
      description: The maximum number of elements in the response array
      required: false
      schema:
        minimum: 1
        type: integer
    Cursor:
      name: cursor
      in: query
      description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
      required: false
      schema:
        type: string
    AssetKind:
      name: assetKind
      in: query
      description: The Asset's kind (Instance or Type)
      required: false
      schema:
        $ref: '#/components/schemas/AssetKind'
    AssetType:
      name: assetType
      in: query
      description: The Asset's type (UTF8-BASE64-URL-encoded)
      required: false
      schema:
        maxLength: 2000
        minLength: 1
        pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\x{00010000}-\\x{0010FFFF}]*$"
        type: string
    AssetAdministrationShellIdentifier:
      name: aasIdentifier
      in: path
      description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
      required: true
      style: simple
      explode: false
      schema:
        type: string
    #        format: byte
    SubmodelIdentifier:
      name: submodelIdentifier
      in: path
      description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ExternalSubjectIdHeader:
      in: header
      name: Edc-Bpn
      schema:
        type: string
        description: Incoming external_subject_id/bpn
  #        format: byte
  examples:
    lookup-shells-by-aas-identifier-query:
      value:
        [
          {
            "key": "globalAssetId",
            "value": "urn:uuid:882fc530-b69b-4707-95f6-5dbc5e9baaa8"
          },
          {
            "key": "PartInstanceID",
            "value": "24975539203421"
          }
        ]
    lookup-specific-asset-ids:
      value:
        [
          {
            "semanticId": {
              "type": "ExternalReference",
              "keys": [
                {
                  "type": "AnnotatedRelationshipElement",
                  "value": "udbffFELY8AudbffZC3^WZ],;udbff^kud8005udbff2ud8002<Sud800Rkudbffb>ud800Dud800j"
                }
              ]
            },
            "supplementalSemanticIds": [
              {
                "type": "ExternalReference",
                "keys": [
                  {
                    "type": "AnnotatedRelationshipElement",
                    "value": "Sud800oud800n>NTud800mud800VpV<7rEKPhAudbff`qOudbff]ud800;aud800>udbffav^nudbff;iRudbffsud8002ud800cqut^"
                  }
                ]
              }
            ],
            "name": "VCudbffB!ud800VkTudbffZdStPOud800:S:P0ud800Budbff;udbff1nootWudb",
            "value": "qfJudbffdudbffSYTudbffb?LQudbfftud800?ud8007udbffq]NQ3",
            "externalSubjectId": {
              "type": "ExternalReference",
              "keys": [
                {
                  "type": "AnnotatedRelationshipElement",
                  "value": "ud800\\pZLbimgkR[Tudbffpudb",
                }
              ]
            }
          }
        ]
    lookup-shells-by-aas-identifier-response:
      value:
        [
            "882fc530-b69b-4707-95f6-5dbc5e9baaa8"
        ]