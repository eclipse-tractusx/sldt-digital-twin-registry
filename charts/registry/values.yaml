################################################################################
# Copyright (c) 2021 Robert Bosch Manufacturing Solutions GmbH and others
# Copyright (c) 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
################################################################################

nameOverride:
fullnameOverride:
# enables the default postgres database
enablePostgres: true
# enables the default keycloak identity provider
# relies on a postgres instance
enableKeycloak: false

registry:
  image:
    registry: docker.io
    repository: tractusx/sldt-digital-twin-registry
    # This version property overwrites the default image version.
    # The default image version is the appVersion of the Chart.yaml.
    version: ""
  replicaCount: 1
  imagePullPolicy: IfNotPresent
  containerPort: 4243
  host: minikube
  ## If 'authentication' is set to false, no OAuth authentication is enforced
  authentication: true
  # Issuer url for the dtr (resource server),
  # make sure that the url points to an externally resolvable hostname.
  # If no value is committed, and the integrated Keycloak is enabled,
  # the K8s internal service name is used, which is a problem, when
  # validating the issuer claim in an access token
  idpIssuerUri: ""
  idpClientId: default-client
  tenantId: default-tenant
  # this field is necessary if cognito is used as identity provider instead of keycloak
  idpInternalClientId: default-client
  # this field configures the identity provider for the digital twin registry (keycloak or cognito)
  identityProvider: keycloak
  externalSubjectIdWildcardPrefix: PUBLIC_READABLE
  externalSubjectIdWildcardAllowedTypes: manufacturerPartId,digitalTwinType
  useGranularAccessControl: "false"
  granularAccessControlFetchSize: "500"
  service:
    port: 8080
    type: ClusterIP
  livenessProbe:
    failureThreshold: 3
    periodSeconds: 3
    initialDelaySeconds: 100
  readinessProbe:
    failureThreshold: 3
    periodSeconds: 3
    initialDelaySeconds: 100
  dataSource:
    driverClassName: org.postgresql.Driver
    sqlInitPlatform: pg
    ## The url, user, and password parameter will be ignored if 'enablePostgres' is set to true.
    ## In that case the postgresql auth parameters are used.
    url: jdbc:postgresql://database:5432
    user: default-user
    password:
  ingress:
    enabled: false
    tls: false
    urlPrefix: /semantics/registry
    className: nginx
    annotations: {}
      # Add annotations for the ingress, e.g.:
      # cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
      # nginx.ingress.kubernetes.io/rewrite-target: /$2
      # nginx.ingress.kubernetes.io/use-regex: "true"
      # nginx.ingress.kubernetes.io/enable-cors: "true"
      # nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      # nginx.ingress.kubernetes.io/x-forwarded-prefix: /semantics/registry
  resources:
    limits:
      cpu: 750m
      memory: 1024Mi
    requests:
      cpu: 250m
      memory: 1024Mi
  podSecurityContext:
    runAsUser: 100
  securityContext:
    runAsUser: 100
    allowPrivilegeEscalation: false

postgresql:
  primary:
    persistence:
      enabled: true
      size: 50Gi
  service:
    ports:
      postgresql: 5432
  auth:
    username: default-user
    # if password is empty, the postgres password will be generated random via postgres-init
    password:
    database: default-database
    # -- Secret contains passwords for username postgres.
    existingSecret: secret-dtr-postgres-init

keycloak:
  postgresql:
    enabled: false
  externalDatabase:
    # host: registry-postgresql
    # port: 5432
    # user: default-user
    # password: password
    # database: default-database
    existingSecret: keycloak-database-credentials
  auth:
    adminUser:
    adminPassword:
  service:
    type: ClusterIP
  # Mounting a keycloak realm configuration file
  fullnameOverride: registry-keycloak
  # default configMap is keycloak.fullnameOverride-configmap
  extraVolumes:
    - name: registry-keycloak-configmap
      configMap:
        name: registry-keycloak-configmap
  extraVolumeMounts:
    - mountPath: /opt/keycloak/data/import/default-realm-import.json
      subPath: default-realm-import.json
      name: registry-keycloak-configmap
  # Using a pre-configured Keycloak with a default realm,
  # containing a test client and user with the necessary roles to
  # authorize requests to the digital twin registry.
  # Make sure to remove the '--hostname' property when deploying
  # in a non-test scanrio
  command: ["/bin/sh", "-c"]
  args: ["kc.sh import --file /opt/keycloak/data/import/default-realm-import.json; kc.sh start-dev --hostname=registry-keycloak --hostname-strict=false --proxy=edge"]
