################################################################################
# Copyright (c) 2023 Robert Bosch Manufacturing Solutions GmbH and others
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
################################################################################

test_name: Test APIs are protected with authentication

includes:
  - !include common.yaml
  - !include stage_auth.yaml

stages:
  - name: Test get shell descriptors without access token
    request:
      url: "{aas_registry_api_url:s}/api/v3.0/shell-descriptors"
      method: GET
    response:
      status_code: 401

  - type: ref
    id: request_auth_token

  - name: Authenticated request
    request:
      url: "{aas_registry_api_url:s}/api/v3.0/shell-descriptors"
      method: GET
      headers:
        Content-Type: application/json
        Authorization: "Bearer {access_token}"
        Edc-Bpn: "{edc_bpn:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json

---
test_name: Test create, read, update and delete of a shell descriptor

includes:
  - !include common.yaml
  - !include stage_auth.yaml

stages:
  - type: ref
    id: request_auth_token

  - name: Create shell descriptor expect success
    request:
      url: "{aas_registry_api_url:s}/api/v3.0/shell-descriptors"
      method: POST
      headers:
        Content-Type: application/json
        Authorization: "Bearer {access_token}"
        Edc-Bpn: "{edc_bpn:s}"
      json:
        id: "{decoded_shell_id:s}"
        idShort: twin of a break (Testing)
    response:
      status_code: 201
      headers:
        content-type: application/json

  - name: Get shell descriptor by id
    request:
      url: "{aas_registry_api_url:s}/api/v3.0/shell-descriptors/{encoded_shell_id:s}"
      method: GET
      headers:
        Content-Type: application/json
        Authorization: "Bearer {access_token}"
        Edc-Bpn: "{edc_bpn:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json
      json:
        description: []
        displayName: []
        idShort: twin of a break (Testing)
        id: "{decoded_shell_id:s}"
        specificAssetIds: []
        submodelDescriptors: []

  - name: Update shell descriptor by id
    request:
      url: "{aas_registry_api_url:s}/api/v3.0/shell-descriptors/{encoded_shell_id:s}"
      method: PUT
      headers:
        Content-Type: application/json
        Authorization: "Bearer {access_token}"
        Edc-Bpn: "{edc_bpn:s}"
      json:
        id: "{decoded_shell_id:s}"
        idShort: twin of a break (Testing Update)
    response:
      status_code: 204

  - name: Delete shell descriptor by id
    request:
      url: "{aas_registry_api_url:s}/api/v3.0/shell-descriptors/{encoded_shell_id:s}"
      method: DELETE
      headers:
        Content-Type: application/json
        Authorization: "Bearer {access_token}"
        Edc-Bpn: "{edc_bpn:s}"
    response:
      status_code: 204