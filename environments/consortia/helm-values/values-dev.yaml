digital-twin-registry:
  enablePostgres: true
  enableKeycloak: true
  keycloak:
    type: NodePort
    args: [ "kc.sh import --file /opt/keycloak/data/import/default-realm-import.json; kc.sh start-dev --hostname-strict=false --proxy=edge" ]
    auth:
      adminUser: <path:semantics/data/dec-reg#keycloak-admin-user-dev>
      adminPassword: <path:semantics/data/dec-reg#keycloak-admin-password-dev>
    ingress:
      enabled: true
      hostname: semantic-dec-registry.dev.demo.catena-x.net
      path: /
      tls: true
      annotations:
        external-dns.alpha.kubernetes.io/hostname: semantic-dec-registry.dev.demo.catena-x.net
        nginx.org/location-snippets: |
          add_header X-Forwarded-Proto https;
          add_header X-Forwarded-For semantic-dec-registry.dev.demo.catena-x.net;
  registry:
    replicaCount: 1
    imagePullPolicy: Always
    host: semantic-dec-registry.dev.demo.catena-x.net
    ## If 'authentication' is set to false, no OAuth authentication is enforced
    authentication: true
    idpIssuerUri: https://semantic-dec-registry.dev.demo.catena-x.net/realms/default-realm
    idpClientId: default-client
    tenantId: demo-tenant
    useGranularAccessControl: "true"
    dataSource:
      driverClassName: org.postgresql.Driver
      ## The url, user, and password parameter will be ignored if 'enablePostgres' is set to true.
      ## In that case the postgresql auth parameters are used.
      url: jdbc:postgresql://postgresql:5432/registry
      user: registryuser
      password: <path:semantics/data/dec-reg#registry-password>
    ingress:
      enabled: true
      tls: true
      urlPrefix: /dec-registry
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: /dec-registry

  postgresql:
    auth:
      username: default-user
      # if password is empty, the postgres password will be generated random via postgres-init
      password: password
      database: default-database
      # -- Secret contains passwords for username postgres.
      existingSecret: secret-dtr-postgres-init